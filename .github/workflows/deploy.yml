name: Deploy to EC2

on:
  push:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up SSH
      run: |
        mkdir -p ~/.ssh/
        echo "${{ secrets.AWS_SSH_KEY }}" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa
        ssh-keyscan -H 13.203.105.218 >> ~/.ssh/known_hosts

    - name: Deploy to EC2
      run: |
        ssh -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa ubuntu@13.203.105.218 "
          mkdir -p /home/ubuntu/Insta_influ_analyser
          cd /home/ubuntu/Insta_influ_analyser

          # Clone repo if it doesn't exist, otherwise pull the latest changes
          if [ ! -d \".git\" ]; then
            git clone https://github.com/${{ github.repository }} .
          else
            git fetch --all
            git reset --hard origin/main
          fi

          # Copy .env file from backup if it exists, otherwise create a new one using secrets
          if [ -f \"/home/ubuntu/.env.backup\" ]; then
            cp /home/ubuntu/.env.backup .env
          else
            cp .env.example .env

            # Replace placeholders in .env with GitHub secrets
            sed -i \"s/your_openai_api_key_here/${{ secrets.OPENAI_API_KEY }}/\" .env
            sed -i \"s/your_apify_api_token_here/${{ secrets.APIFY_API_TOKEN }}/\" .env
            sed -i \"s/your_random_secure_key_here/${{ secrets.SECRET_KEY }}/\" .env
          fi

          mkdir -p certbot/conf certbot/www

          # Install docker-compose if it's not available
          if ! command -v docker-compose &> /dev/null; then
            echo Installing docker-compose...
            sudo curl -L \"https://github.com/docker/compose/releases/download/v2.24.2/docker-compose-\$(uname -s)-\$(uname -m)\" -o /usr/local/bin/docker-compose
            sudo chmod +x /usr/local/bin/docker-compose
          fi

          # Use docker compose (v2) if available
          if command -v docker compose &> /dev/null; then
            docker compose -f docker-compose.prod.yml down
            docker compose -f docker-compose.prod.yml build --no-cache
            docker compose -f docker-compose.prod.yml up -d
          else
            docker-compose -f docker-compose.prod.yml down
            docker-compose -f docker-compose.prod.yml build --no-cache
            docker-compose -f docker-compose.prod.yml up -d
          fi

          # Backup the .env file
          cp .env /home/ubuntu/.env.backup
        "

    - name: Clean up SSH keys
      run: rm -rf ~/.ssh

name: Deploy to EC2

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  deploy:
    name: Deploy Application to EC2
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      
      - name: Create deployment package
        run: |
          echo "=== STEP 1: Creating deployment package ==="
          # Create a fresh deployment directory
          mkdir -p deployment_package
          
          # Copy all files except .git and .github
          find . -mindepth 1 -maxdepth 1 -not -path "./.git" -not -path "./.github" -exec cp -r {} deployment_package/ \;
          
          # Create .env file directly in the deployment package
          echo "OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }}" > deployment_package/.env
          echo "APIFY_API_TOKEN=${{ secrets.APIFY_API_TOKEN }}" >> deployment_package/.env
          echo "SECRET_KEY=${{ secrets.SECRET_KEY }}" >> deployment_package/.env
          
          # Create the tarball
          cd deployment_package
          tar -czf ../deployment.tar.gz .
          cd ..
          
          # Verify the package size
          echo "Deployment package created:"
          ls -lh deployment.tar.gz
      
      - name: Deploy to EC2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.AWS_HOST }}
          username: ${{ secrets.AWS_USERNAME }}
          key: ${{ secrets.AWS_SSH_KEY }}
          command_timeout: 30m
          script: |
            echo "=== STEP 2: Setting up EC2 environment ==="
            # Create directories if they don't exist
            mkdir -p ~/Insta_influ_analyser
      
      - name: Transfer deployment package
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.AWS_HOST }}
          username: ${{ secrets.AWS_USERNAME }}
          key: ${{ secrets.AWS_SSH_KEY }}
          source: "deployment.tar.gz"
          target: "~"
      
      - name: Build and launch application
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.AWS_HOST }}
          username: ${{ secrets.AWS_USERNAME }}
          key: ${{ secrets.AWS_SSH_KEY }}
          command_timeout: 30m
          script: |
            echo "=== STEP 3: Deploying application ==="
            
            # Extract deployment package
            echo "Extracting deployment package..."
            rm -rf ~/Insta_influ_analyser/*
            tar -xzf ~/deployment.tar.gz -C ~/Insta_influ_analyser
            cd ~/Insta_influ_analyser
            
            # Build and start containers
            echo "Building and starting Docker containers..."
            docker-compose down || true
            docker-compose up --build -d
            
            # Verify deployment
            echo "Verifying deployment:"
            docker ps
            
            # Cleanup
            echo "Cleaning up..."
            docker image prune -f
            rm ~/deployment.tar.gz
            
            echo "=== DEPLOYMENT COMPLETED SUCCESSFULLY ===" 